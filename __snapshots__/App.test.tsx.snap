// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<App /> renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onGestureCancel={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      sheetAllowedDetents="large"
      sheetCornerRadius={-1}
      sheetExpandsWhenScrolledToEdge={true}
      sheetGrabberVisible={false}
      sheetLargestUndimmedDetent="all"
      stackPresentation="push"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          collapsable={false}
          style={
            [
              {
                "flex": 1,
              },
              {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              {
                "backgroundColor": "#f2f2f2",
                "flex": 1,
              }
            }
          >
            <RCTScrollView
              data={[]}
              getItem={[Function]}
              getItemCount={[Function]}
              keyExtractor={[Function]}
              onContentSizeChange={[Function]}
              onLayout={[Function]}
              onMomentumScrollBegin={[Function]}
              onMomentumScrollEnd={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              removeClippedSubviews={false}
              renderItem={[Function]}
              scrollEventThrottle={0.0001}
              stickyHeaderIndices={[]}
              viewabilityConfigCallbackPairs={[]}
            >
              <View />
            </RCTScrollView>
          </View>
        </View>
      </View>
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleVisible={true}
        backgroundColor="#1FE687"
        color="#141414"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="Neon Shop"
        titleColor="#141414"
        topInsetEnabled={false}
        translucent={false}
      >
        <RNSScreenStackHeaderSubview
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          type="right"
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#ffff",
                  "borderRadius": 10,
                  "bottom": -5,
                  "height": 20,
                  "justifyContent": "center",
                  "position": "absolute",
                  "right": -10,
                  "width": 20,
                  "zIndex": 10,
                }
              }
            >
              <Text>
                0
              </Text>
            </View>
            <Text
              allowFontScaling={false}
              selectable={false}
              style={
                [
                  {
                    "color": undefined,
                    "fontSize": 28,
                  },
                  undefined,
                  {
                    "fontFamily": "ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  {},
                ]
              }
            >
              î¬ƒ
            </Text>
          </View>
        </RNSScreenStackHeaderSubview>
      </RNSScreenStackHeaderConfig>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
